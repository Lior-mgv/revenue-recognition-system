// <auto-generated />
using System;
using FinancesProject.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Project.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240626135553_SeedData")]
    partial class SeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0-preview.5.24306.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DiscountProduct", b =>
                {
                    b.Property<int>("IdDiscount")
                        .HasColumnType("int");

                    b.Property<int>("IdProduct")
                        .HasColumnType("int");

                    b.HasKey("IdDiscount", "IdProduct");

                    b.HasIndex("IdProduct");

                    b.ToTable("DiscountProduct");
                });

            modelBuilder.Entity("FinancesProject.Models.Client", b =>
                {
                    b.Property<int>("IdClient")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdClient"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdClient");

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            IdClient = 1,
                            Address = "123 Main St",
                            Email = "client1@example.com",
                            PhoneNumber = "123456789"
                        },
                        new
                        {
                            IdClient = 2,
                            Address = "456 Elm St",
                            Email = "client2@example.com",
                            PhoneNumber = "987654321"
                        },
                        new
                        {
                            IdClient = 3,
                            Address = "452 Elm St",
                            Email = "client3@example.com",
                            PhoneNumber = "967654321"
                        },
                        new
                        {
                            IdClient = 4,
                            Address = "455 Elm St",
                            Email = "client2@example.com",
                            PhoneNumber = "787654321"
                        });
                });

            modelBuilder.Entity("FinancesProject.Models.Company", b =>
                {
                    b.Property<int>("CompanyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CompanyId"));

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("Krs")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("CompanyId");

                    b.HasIndex("ClientId");

                    b.ToTable("Companies");

                    b.HasData(
                        new
                        {
                            CompanyId = 1,
                            ClientId = 1,
                            Krs = "KRS123456",
                            Name = "Company A"
                        },
                        new
                        {
                            CompanyId = 2,
                            ClientId = 2,
                            Krs = "KRS654321",
                            Name = "Company B"
                        });
                });

            modelBuilder.Entity("FinancesProject.Models.Contract", b =>
                {
                    b.Property<int>("IdContract")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdContract"));

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdClient")
                        .HasColumnType("int");

                    b.Property<int>("IdProductVersion")
                        .HasColumnType("int");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<decimal>("Price")
                        .HasColumnType("money");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SupportYears")
                        .HasColumnType("int");

                    b.HasKey("IdContract");

                    b.HasIndex("IdClient");

                    b.HasIndex("IdProductVersion");

                    b.ToTable("Contracts");
                });

            modelBuilder.Entity("FinancesProject.Models.Discount", b =>
                {
                    b.Property<int>("IdDiscount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDiscount"));

                    b.Property<DateTime>("DateFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateTo")
                        .HasColumnType("datetime2");

                    b.Property<bool>("ForSubscription")
                        .HasColumnType("bit");

                    b.Property<bool>("ForUpfront")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Percentage")
                        .HasColumnType("int");

                    b.HasKey("IdDiscount");

                    b.ToTable("Discounts");

                    b.HasData(
                        new
                        {
                            IdDiscount = 1,
                            DateFrom = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateTo = new DateTime(2023, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ForSubscription = true,
                            ForUpfront = true,
                            Name = "Discount A",
                            Percentage = 10
                        },
                        new
                        {
                            IdDiscount = 2,
                            DateFrom = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateTo = new DateTime(2024, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ForSubscription = false,
                            ForUpfront = true,
                            Name = "Discount B",
                            Percentage = 20
                        });
                });

            modelBuilder.Entity("FinancesProject.Models.IndividualClient", b =>
                {
                    b.Property<int>("IndividualClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IndividualClientId"));

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Pesel")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IndividualClientId");

                    b.HasIndex("ClientId");

                    b.ToTable("IndividualClients");

                    b.HasData(
                        new
                        {
                            IndividualClientId = 1,
                            ClientId = 3,
                            FirstName = "John",
                            LastName = "Doe",
                            Pesel = "12345678901"
                        },
                        new
                        {
                            IndividualClientId = 2,
                            ClientId = 4,
                            FirstName = "Jane",
                            LastName = "Smith",
                            Pesel = "10987654321"
                        });
                });

            modelBuilder.Entity("FinancesProject.Models.Product", b =>
                {
                    b.Property<int>("IdProduct")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProduct"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("money");

                    b.HasKey("IdProduct");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            IdProduct = 1,
                            Category = "Category 1",
                            Description = "Description for Product A",
                            Name = "Product A",
                            Price = 100m
                        },
                        new
                        {
                            IdProduct = 2,
                            Category = "Category 2",
                            Description = "Description for Product B",
                            Name = "Product B",
                            Price = 200m
                        },
                        new
                        {
                            IdProduct = 3,
                            Category = "Category 3",
                            Description = "Description for Product C",
                            Name = "Product C",
                            Price = 300m
                        });
                });

            modelBuilder.Entity("FinancesProject.Models.ProductVersion", b =>
                {
                    b.Property<int>("IdProductVersion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProductVersion"));

                    b.Property<int>("IdProduct")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdProductVersion");

                    b.HasIndex("IdProduct");

                    b.ToTable("ProductVersions");

                    b.HasData(
                        new
                        {
                            IdProductVersion = 1,
                            IdProduct = 1,
                            Name = "Version 1.0"
                        },
                        new
                        {
                            IdProductVersion = 2,
                            IdProduct = 1,
                            Name = "Version 1.1"
                        },
                        new
                        {
                            IdProductVersion = 3,
                            IdProduct = 2,
                            Name = "Version 2.0"
                        });
                });

            modelBuilder.Entity("FinancesProject.Models.Transaction", b =>
                {
                    b.Property<int>("IdTransaction")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTransaction"));

                    b.Property<int>("ContractIdContract")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdContract")
                        .HasColumnType("int");

                    b.Property<decimal>("Sum")
                        .HasColumnType("money");

                    b.HasKey("IdTransaction");

                    b.HasIndex("ContractIdContract");

                    b.ToTable("Transaction");
                });

            modelBuilder.Entity("DiscountProduct", b =>
                {
                    b.HasOne("FinancesProject.Models.Discount", null)
                        .WithMany()
                        .HasForeignKey("IdDiscount")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_DiscountProduct_Discounts_DiscountId");

                    b.HasOne("FinancesProject.Models.Product", null)
                        .WithMany()
                        .HasForeignKey("IdProduct")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_DiscountProduct_Products_ProductId");
                });

            modelBuilder.Entity("FinancesProject.Models.Company", b =>
                {
                    b.HasOne("FinancesProject.Models.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("FinancesProject.Models.Contract", b =>
                {
                    b.HasOne("FinancesProject.Models.Client", "Client")
                        .WithMany("Contracts")
                        .HasForeignKey("IdClient")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinancesProject.Models.ProductVersion", "Version")
                        .WithMany("Contracts")
                        .HasForeignKey("IdProductVersion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Version");
                });

            modelBuilder.Entity("FinancesProject.Models.IndividualClient", b =>
                {
                    b.HasOne("FinancesProject.Models.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("FinancesProject.Models.ProductVersion", b =>
                {
                    b.HasOne("FinancesProject.Models.Product", "Product")
                        .WithMany("Versions")
                        .HasForeignKey("IdProduct")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("FinancesProject.Models.Transaction", b =>
                {
                    b.HasOne("FinancesProject.Models.Contract", "Contract")
                        .WithMany()
                        .HasForeignKey("ContractIdContract")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contract");
                });

            modelBuilder.Entity("FinancesProject.Models.Client", b =>
                {
                    b.Navigation("Contracts");
                });

            modelBuilder.Entity("FinancesProject.Models.Product", b =>
                {
                    b.Navigation("Versions");
                });

            modelBuilder.Entity("FinancesProject.Models.ProductVersion", b =>
                {
                    b.Navigation("Contracts");
                });
#pragma warning restore 612, 618
        }
    }
}
